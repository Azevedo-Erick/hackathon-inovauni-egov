// <auto-generated />
using System;
using HackatonInovaUniEGov.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HackatonInovaUniEGov.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HackatonInovaUniEGov.Models.CategoriaServicoPublico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categoria_servico_publico", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CategoriaServicoPublicoId1")
                        .HasColumnType("int");

                    b.Property<bool>("MostarMediaNoPortal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("texto");

                    b.Property<string>("TipoPergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TituloParaOPortal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("slug");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaServicoPublicoId1");

                    b.ToTable("questoes", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AvaliacaoMedia")
                        .HasColumnType("int")
                        .HasColumnName("avaliacao_media");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<int>("ServicoPublicoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ValorPontos")
                        .HasColumnType("int")
                        .HasColumnName("valor_pontos");

                    b.HasKey("Id");

                    b.HasIndex("ServicoPublicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("questionario", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.RespostaPergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Nota")
                        .HasMaxLength(255)
                        .HasColumnType("int")
                        .HasColumnName("nota");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.HasIndex("QuestionarioId");

                    b.ToTable("respostas_perguntas", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.ServicoPublico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_url");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<int>("PontosPorAvaliar")
                        .HasColumnType("int")
                        .HasColumnName("pontos_avaliar");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("servicos_publicos", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<int>("Pontos")
                        .HasColumnType("int")
                        .HasColumnName("pontos");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questao", b =>
                {
                    b.HasOne("HackatonInovaUniEGov.Models.CategoriaServicoPublico", "CategoriaServicoPublico")
                        .WithMany("Questoes")
                        .HasForeignKey("CategoriaServicoPublicoId1");

                    b.Navigation("CategoriaServicoPublico");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questionario", b =>
                {
                    b.HasOne("HackatonInovaUniEGov.Models.ServicoPublico", "ServicoPublico")
                        .WithMany("Questionarios")
                        .HasForeignKey("ServicoPublicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackatonInovaUniEGov.Models.Usuario", "Usuario")
                        .WithMany("Questionarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicoPublico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.RespostaPergunta", b =>
                {
                    b.HasOne("HackatonInovaUniEGov.Models.Questao", "Questao")
                        .WithMany("RespostasPerguntas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackatonInovaUniEGov.Models.Questionario", "Questionario")
                        .WithMany("RespostasPergunta")
                        .HasForeignKey("QuestionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questao");

                    b.Navigation("Questionario");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.ServicoPublico", b =>
                {
                    b.HasOne("HackatonInovaUniEGov.Models.CategoriaServicoPublico", "Categoria")
                        .WithMany("ServicosPublicos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.CategoriaServicoPublico", b =>
                {
                    b.Navigation("Questoes");

                    b.Navigation("ServicosPublicos");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questao", b =>
                {
                    b.Navigation("RespostasPerguntas");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Questionario", b =>
                {
                    b.Navigation("RespostasPergunta");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.ServicoPublico", b =>
                {
                    b.Navigation("Questionarios");
                });

            modelBuilder.Entity("HackatonInovaUniEGov.Models.Usuario", b =>
                {
                    b.Navigation("Questionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
